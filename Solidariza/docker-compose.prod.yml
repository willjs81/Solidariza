version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-solidariza}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    env_file:
      - .env.prod
    volumes:
      - staticfiles:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - staticfiles:/var/www/static:ro
      - webroot:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/certbot
    entrypoint: sh
    command: -c "while :; do certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook 'nginx -s reload' || true; sleep 12h; done"
    depends_on:
      - nginx
    restart: unless-stopped

volumes:
  staticfiles:
  certbot-etc:
  certbot-var:
  webroot:
  pgdata:


